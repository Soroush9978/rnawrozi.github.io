"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4575],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},g=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),m=c(r),u=a,d=m["".concat(o,".").concat(u)]||m[u]||p[u]||s;return r?n.createElement(d,l(l({ref:t},g),{},{components:r})):n.createElement(d,l({ref:t},g))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<s;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},860:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const s={sidebar_label:"message_service",title:"core.messaging.handlers.message_service"},l=void 0,i={unversionedId:"reference/core/messaging/handlers/message_service",id:"reference/core/messaging/handlers/message_service",title:"core.messaging.handlers.message_service",description:"MessageService Objects",source:"@site/docs/reference/core/messaging/handlers/message_service.md",sourceDirName:"reference/core/messaging/handlers",slug:"/reference/core/messaging/handlers/message_service",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/handlers/message_service",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"message_service",title:"core.messaging.handlers.message_service"},sidebar:"referenceSidebar",previous:{title:"message_handlers",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/handlers/message_handlers"},next:{title:"message",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/message"}},o={},c=[{value:"MessageService Objects",id:"messageservice-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"create_context",id:"create_context",level:4},{value:"create_message_emitter",id:"create_message_emitter",level:4},{value:"message_handlers",id:"message_handlers",level:4}],g={toc:c},m="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"messageservice-objects"},"MessageService Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class MessageService()\n")),(0,a.kt)("p",null,"Base class for all message services."),(0,a.kt)("p",null,"A ",(0,a.kt)("em",{parentName:"p"},"message service")," wraps message handlers and proper message context creation (i.e., using a flexible context type). It\nis used by the message bus as an encapsulated layer for message dispatching."),(0,a.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(comp_id: UnitID,\n             *,\n             message_bus: MessageBusProtocol,\n             context_type: type[MessageContextType] = MessageContext)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"comp_id")," - The global component identifier."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"message_bus")," - The global message bus."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context_type")," - The type to use when creating a message context.")),(0,a.kt)("h4",{id:"create_context"},"create","_","context"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def create_context(config: Configuration,\n                   logger: LoggerProtocol) -> MessageContext\n")),(0,a.kt)("p",null,"Creates a new service context."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"config")," - The global component configuration."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"logger")," - The logger to be used within the new context.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  The newly created message context."),(0,a.kt)("h4",{id:"create_message_emitter"},"create","_","message","_","emitter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def create_message_emitter() -> MessageEmitter\n")),(0,a.kt)("p",null,"Creates a new message emitter."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  The newly created message emitter."),(0,a.kt)("h4",{id:"message_handlers"},"message","_","handlers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef message_handlers() -> MessageHandlers\n")),(0,a.kt)("p",null,"The message handlers maintained by this message service."))}p.isMDXComponent=!0}}]);