"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3782],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=r,d=p["".concat(i,".").concat(u)]||p[u]||g[u]||s;return n?a.createElement(d,o(o({ref:t},m),{},{components:n})):a.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_label:"message",title:"core.messaging.message"},o=void 0,l={unversionedId:"reference/core/messaging/message",id:"reference/core/messaging/message",title:"core.messaging.message",description:"Message Objects",source:"@site/docs/reference/core/messaging/message.md",sourceDirName:"reference/core/messaging",slug:"/reference/core/messaging/message",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/message",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"message",title:"core.messaging.message"},sidebar:"referenceSidebar",previous:{title:"message_service",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/handlers/message_service"},next:{title:"message_bus",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/message_bus"}},i={},c=[{value:"Message Objects",id:"message-objects",level:2},{value:"define",id:"define",level:4},{value:"MessageType",id:"messagetype",level:4}],m={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"message-objects"},"Message Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass(frozen=True, kw_only=True)\nclass Message(abc.ABC)\n")),(0,r.kt)("p",null,"Base class for all messages."),(0,r.kt)("p",null,"A message, besides its actual data, consists mainly of information from where it came and where it should go."),(0,r.kt)("p",null,"This class also offers a useful decorator to easily declare new messages, like in the following example::"),(0,r.kt)("p",null,"@Message.define(",'"',"msg/command",'"',")\nclass MyCommand(Command):\nsome_number: int = 0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - The name of the message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origin")," - The initial source component of the message."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sender")," - The component from where the message came from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"target")," - Where the message should go to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hops")," - A list of components the message was sent through."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"trace")," - A unique trace identifying messages that logically belong together.")),(0,r.kt)("h4",{id:"define"},"define"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@staticmethod\ndef define(name: str)\n")),(0,r.kt)("p",null,"Defines a new message."),(0,r.kt)("p",null,"The decorator takes care of wrapping the new class as a dataclass, passing the correct message\nname to its constructor. It also registers the new message type in the global ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageTypesCatalog"),"."),(0,r.kt)("p",null,"Examples::"),(0,r.kt)("p",null,"@Message.define(",'"',"msg/command",'"',")\nclass MyCommand(Command):\nsome_number: int = 0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - The name of the message.")),(0,r.kt)("h4",{id:"messagetype"},"MessageType"),(0,r.kt)("p",null,"pylint: disable=invalid-name"))}g.isMDXComponent=!0}}]);