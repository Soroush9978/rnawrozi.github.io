"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3064],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4953:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_label:"command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher"},s=void 0,o={unversionedId:"reference/core/messaging/dispatchers/command_reply_dispatcher",id:"reference/core/messaging/dispatchers/command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher",description:"CommandReplyDispatcher Objects",source:"@site/docs/reference/core/messaging/dispatchers/command_reply_dispatcher.md",sourceDirName:"reference/core/messaging/dispatchers",slug:"/reference/core/messaging/dispatchers/command_reply_dispatcher",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/dispatchers/command_reply_dispatcher",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"command_reply_dispatcher",title:"core.messaging.dispatchers.command_reply_dispatcher"},sidebar:"referenceSidebar",previous:{title:"command_dispatcher",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/dispatchers/command_dispatcher"},next:{title:"event_dispatcher",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/dispatchers/event_dispatcher"}},l={},p=[{value:"CommandReplyDispatcher Objects",id:"commandreplydispatcher-objects",level:2},{value:"pre_dispatch",id:"pre_dispatch",level:4},{value:"dispatch",id:"dispatch",level:4}],c={toc:p},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"commandreplydispatcher-objects"},"CommandReplyDispatcher Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class CommandReplyDispatcher(MessageDispatcher[CommandReply])\n")),(0,a.kt)("p",null,"Message dispatcher specific to ",(0,a.kt)("inlineCode",{parentName:"p"},"CommandReply"),"."),(0,a.kt)("h4",{id:"pre_dispatch"},"pre","_","dispatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def pre_dispatch(msg: CommandReply,\n                 msg_meta: CommandReplyMetaInformation) -> None\n")),(0,a.kt)("p",null,"Invokes reply callbacks associated with the replied command."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg")," - The command reply that is about to be dispatched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg_meta")," - The command reply meta information.")),(0,a.kt)("h4",{id:"dispatch"},"dispatch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def dispatch(msg: CommandReply, msg_meta: CommandReplyMetaInformation,\n             handler: MessageHandlerMapping, ctx: MessageContextType) -> None\n")),(0,a.kt)("p",null,"Dispatches a message to locally registered message handlers."),(0,a.kt)("p",null,"Handlers can be either called synchronously or asynchronously, depending on how the handler was registered."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Notes"),":"),(0,a.kt)("p",null,"  Exceptions arising within a message handler will not interrupt the running program; instead, such errors will only be logged."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg")," - The message to be dispatched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg_meta")," - The message meta information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handler")," - The handler to be invoked."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ctx")," - The message context.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Raises"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RuntimeError")," - If the handler requires a different message type.")))}d.isMDXComponent=!0}}]);