"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8306],{3905:(e,r,n)=>{n.d(r,{Zo:()=>m,kt:()=>y});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=t.createContext({}),s=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},m=function(e){var r=s(e.components);return t.createElement(i.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,y=p["".concat(i,".").concat(u)]||p[u]||d[u]||o;return n?t.createElement(y,l(l({ref:r},m),{},{components:n})):t.createElement(y,l({ref:r},m))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[p]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2023:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var t=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"command_reply",title:"core.messaging.command_reply"},l=void 0,c={unversionedId:"reference/core/messaging/command_reply",id:"reference/core/messaging/command_reply",title:"core.messaging.command_reply",description:"CommandReply Objects",source:"@site/docs/reference/core/messaging/command_reply.md",sourceDirName:"reference/core/messaging",slug:"/reference/core/messaging/command_reply",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/command_reply",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"command_reply",title:"core.messaging.command_reply"},sidebar:"referenceSidebar",previous:{title:"command",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/command"},next:{title:"command_dispatcher",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/dispatchers/command_dispatcher"}},i={},s=[{value:"CommandReply Objects",id:"commandreply-objects",level:2},{value:"FailType Objects",id:"failtype-objects",level:2},{value:"CommandReplyType",id:"commandreplytype",level:4}],m={toc:s},p="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(p,(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"commandreply-objects"},"CommandReply Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass(frozen=True, kw_only=True)\nclass CommandReply(Message)\n")),(0,a.kt)("p",null,"A command reply message."),(0,a.kt)("p",null,"Every command needs to receive a reply in the form of a ",(0,a.kt)("inlineCode",{parentName:"p"},"CommandReply")," message. The reply contains\ninformation about its ",(0,a.kt)("inlineCode",{parentName:"p"},"success"),", as well as a text message which is usually used to describe reasons for\nfailures."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"success")," - Whether the command succeeded."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"message")," - Arbitrary text, usually used to describe reasons for failures."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unique")," - The unique identifier of its corresponding command.")),(0,a.kt)("h2",{id:"failtype-objects"},"FailType Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class FailType(IntEnum)\n")),(0,a.kt)("p",null,"Used when a command failed."),(0,a.kt)("h4",{id:"commandreplytype"},"CommandReplyType"),(0,a.kt)("p",null,"pylint: disable=invalid-name"))}d.isMDXComponent=!0}}]);