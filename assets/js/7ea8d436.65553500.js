"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),g=i,f=u["".concat(s,".").concat(g)]||u[g]||d[g]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1281:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_label:"setting_id",title:"utils.config.setting_id"},l=void 0,o={unversionedId:"reference/utils/config/setting_id",id:"reference/utils/config/setting_id",title:"utils.config.setting_id",description:"SettingID Objects",source:"@site/docs/reference/utils/config/setting_id.md",sourceDirName:"reference/utils/config",slug:"/reference/utils/config/setting_id",permalink:"/rnawrozi.github.io/docs/reference/utils/config/setting_id",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"setting_id",title:"utils.config.setting_id"},sidebar:"referenceSidebar",previous:{title:"configuration",permalink:"/rnawrozi.github.io/docs/reference/utils/config/configuration"},next:{title:"random",permalink:"/rnawrozi.github.io/docs/reference/utils/random"}},s={},p=[{value:"SettingID Objects",id:"settingid-objects",level:2},{value:"split",id:"split",level:4},{value:"env_name",id:"env_name",level:4}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"settingid-objects"},"SettingID Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@dataclasses.dataclass(frozen=True)\nclass SettingID()\n")),(0,i.kt)("p",null,"A setting identifier."),(0,i.kt)("p",null,"Settings are specified by a category they belong to, as well as their actual name."),(0,i.kt)("p",null,"Categories support sub-categories by separating them using dots (.);\nwhen represented as a string, all component tokens are separated by dots."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"category")," - The category name. Sub-categories can be separated by dots (.)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," - The name of the setting.")),(0,i.kt)("h4",{id:"split"},"split"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def split() -> typing.List[str]\n")),(0,i.kt)("p",null,"Splits the entire identifier into single string tokens."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"  The tokens list."),(0,i.kt)("h4",{id:"env_name"},"env","_","name"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def env_name(prefix: str) -> str\n")),(0,i.kt)("p",null,"Generates an environment variable name for this identifier."),(0,i.kt)("p",null,"A setting identifier is translated to its corresponding environment variable name by replacing all dots (.) with underscores (_),\nprepending a ",(0,i.kt)("inlineCode",{parentName:"p"},"prefix"),", as well as making everything uppercase."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"prefix")," - The prefix to prepend.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"  The corresponding environment variable name."))}d.isMDXComponent=!0}}]);