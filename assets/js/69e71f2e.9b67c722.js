"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4179],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>d});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,d=u["".concat(l,".").concat(m)]||u[m]||g[m]||a;return r?t.createElement(d,i(i({ref:n},p),{},{components:r})):t.createElement(d,i({ref:n},p))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2025:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var t=r(7462),o=(r(7294),r(3905));const a={sidebar_label:"server",title:"core.messaging.networking.server"},i=void 0,s={unversionedId:"reference/core/messaging/networking/server",id:"reference/core/messaging/networking/server",title:"core.messaging.networking.server",description:"Server Objects",source:"@site/docs/reference/core/messaging/networking/server.md",sourceDirName:"reference/core/messaging/networking",slug:"/reference/core/messaging/networking/server",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/networking/server",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"server",title:"core.messaging.networking.server"},sidebar:"referenceSidebar",previous:{title:"network_router",permalink:"/rnawrozi.github.io/docs/reference/core/messaging/networking/network_router"},next:{title:"service",permalink:"/rnawrozi.github.io/docs/reference/service/"}},l={},c=[{value:"Server Objects",id:"server-objects",level:2},{value:"SendTarget Objects",id:"sendtarget-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"run",id:"run",level:4},{value:"send_message",id:"send_message",level:4}],p={toc:c},u="wrapper";function g(e){let{components:n,...r}=e;return(0,o.kt)(u,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"server-objects"},"Server Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class Server(socketio.Server)\n")),(0,o.kt)("p",null,"The server connection, based on ",(0,o.kt)("inlineCode",{parentName:"p"},"socketio.Server"),"."),(0,o.kt)("h2",{id:"sendtarget-objects"},"SendTarget Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class SendTarget(IntEnum)\n")),(0,o.kt)("p",null,"Flag telling whether an outgoing message is only sent to a single (direct) target or spread across all connected clients."),(0,o.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(comp_id: UnitID, config: Configuration)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"comp_id")," - The component identifier."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"config")," - The global configuration.")),(0,o.kt)("h4",{id:"run"},"run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def run() -> None\n")),(0,o.kt)("p",null,"So far, does exactly nothing."),(0,o.kt)("h4",{id:"send_message"},"send","_","message"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def send_message(\n        msg: Message,\n        *,\n        skip_components: typing.List[UnitID] | None = None) -> SendTarget\n")),(0,o.kt)("p",null,"Sends a message to one or more clients."),(0,o.kt)("p",null,"For this, the message will be encoded as ",(0,o.kt)("em",{parentName:"p"},"JSON")," first."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg")," - The message to send."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"skip_components")," - A list of components (clients) to be excluded from the targets.")))}g.isMDXComponent=!0}}]);